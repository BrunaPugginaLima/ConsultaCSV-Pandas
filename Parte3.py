#Bruna Puggina Lima - ECP - Trechos de código - TG

#Coletando informações (Display) de quantas vezes cada item de uma coluna específica aparece no arquivo da tabela original (TCP) e da tabela formada pelas linhas da tabela original nas quais a coluna lastip6 é nula.
import pandas as pd
pd.set_option('display.max_rows', None) 

mar_tcp = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Netmetric_03_2019_TCP.csv', usecols=['lastip6', 'conn_tech','osversion','brand', 'end_tech'])
abr_tcp = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Netmetric_04_2019_TCP.csv', usecols=['lastip6', 'conn_tech','osversion','brand', 'end_tech'])
mai_tcp = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Netmetric_05_2019_TCP.csv', usecols=['lastip6', 'conn_tech','osversion','brand', 'end_tech'])
jun_tcp = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Netmetric_06_2019_TCP.csv', usecols=['lastip6', 'conn_tech','osversion','brand', 'end_tech'])
jul_tcp = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Netmetric_07_2019_TCP.csv', usecols=['lastip6', 'conn_tech','osversion','brand', 'end_tech'])
ago_tcp = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Netmetric_08_2019_TCP.csv', usecols=['lastip6', 'conn_tech','osversion','brand', 'end_tech'])
set_tcp = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Netmetric_09_2019_TCP.csv', usecols=['lastip6', 'conn_tech','osversion','brand', 'end_tech'])
out_tcp = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Netmetric_10_2019_TCP.csv', usecols=['lastip6', 'conn_tech','osversion','brand', 'end_tech'])
nov_tcp = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Netmetric_11_2019_TCP.csv', usecols=['lastip6', 'conn_tech','osversion','brand', 'end_tech'])
dez_tcp = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Netmetric_12_2019_TCP.csv', quoting = 3, usecols=['lastip6', 'conn_tech','osversion','brand', 'end_tech'])
jan_tcp = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Netmetric_01_2020_TCP.csv', usecols=['lastip6', 'conn_tech','osversion','brand', 'end_tech'])
fev_tcp = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Netmetric_02_2020_TCP.csv', usecols=['lastip6', 'conn_tech','osversion','brand', 'end_tech'])

nmarudpv6 = mar_tcp.query('lastip6.isnull()', engine='python')
nabrtcpv6 = abr_tcp.query('lastip6.isnull()', engine='python')
nmaitcpv6 = tcp_tcp.query('lastip6.isnull()', engine='python')
njuntcpv6 = jun_tcp.query('lastip6.isnull()', engine='python')
njultcpv6 = jul_tcp.query('lastip6.isnull()', engine='python')
nagotcpv6 = ago_tcp.query('lastip6.isnull()', engine='python')
nsettcpv6 = set_tcp.query('lastip6.isnull()', engine='python')
nouttcpv6 = out_tcp.query('lastip6.isnull()', engine='python')
nnovtcpv6 = nov_tcp.query('lastip6.isnull()', engine='python')
ndeztcpv6 = dez_tcp.query('lastip6.isnull()', engine='python')
njantcpv6 = jan_tcp.query('lastip6.isnull()', engine='python')
nfevtcpv6 = fev_tcp.query('lastip6.isnull()', engine='python')
#OS VERSION
mar_tcp.groupby(by='osversion').size()
nmarudpv6.groupby(by='osversion').size()
abr_tcp.groupby(by='osversion').size()
nabrtcpv6.groupby(by='osversion').size()
mai_tcp.groupby(by='osversion').size()
nmaitcpv6.groupby(by='osversion').size()
jun_tcp.groupby(by='osversion').size()
njuntcpv6.groupby(by='osversion').size()
jul_tcp.groupby(by='osversion').size()
njultcpv6.groupby(by='osversion').size()
ago_tcp.groupby(by='osversion').size()
nagotcpv6.groupby(by='osversion').size()
set_tcp.groupby(by='osversion').size()
nsettcpv6.groupby(by='osversion').size()
out_tcp.groupby(by='osversion').size()
nouttcpv6.groupby(by='osversion').size()
nov_tcp.groupby(by='osversion').size()
nnovtcpv6.groupby(by='osversion').size()
dez_tcp.groupby(by='osversion').size()
ndeztcpv6.groupby(by='osversion').size()
jan_tcp.groupby(by='osversion').size()
njantcpv6.groupby(by='osversion').size()
fev_tcp.groupby(by='osversion').size()
nfevtcpv6.groupby(by='osversion').size()
#CONN_TECH
mar_tcp.groupby(by='conn_tech').size()
nmarudpv6.groupby(by='conn_tech').size()
abr_tcp.groupby(by='conn_tech').size()
nabrtcpv6.groupby(by='conn_tech').size()
mai_tcp.groupby(by='conn_tech').size()
nmaitcpv6.groupby(by='conn_tech').size()
jun_tcp.groupby(by='conn_tech').size()
njuntcpv6.groupby(by='conn_tech').size()
jul_tcp.groupby(by='conn_tech').size()
njultcpv6.groupby(by='conn_tech').size()
ago_tcp.groupby(by='conn_tech').size()
nagotcpv6.groupby(by='conn_tech').size()
set_tcp.groupby(by='conn_tech').size()
nsettcpv6.groupby(by='conn_tech').size()
out_tcp.groupby(by='conn_tech').size()
nouttcpv6.groupby(by='conn_tech').size()
nov_tcp.groupby(by='conn_tech').size()
nnovtcpv6.groupby(by='conn_tech').size()
dez_tcp.groupby(by='conn_tech').size()
ndeztcpv6.groupby(by='conn_tech').size()
jan_tcp.groupby(by='conn_tech').size()
njantcpv6.groupby(by='conn_tech').size()
fev_tcp.groupby(by='conn_tech').size()
nfevtcpv6.groupby(by='conn_tech').size()
#BRAND 
mar_tcp.groupby(by='brand').size()
nmarudpv6.groupby(by='brand').size()
abr_tcp.groupby(by='brand').size()
nabrtcpv6.groupby(by='brand').size()
mai_tcp.groupby(by='brand').size()
nmaitcpv6.groupby(by='brand').size()
jun_tcp.groupby(by='brand').size()
njuntcpv6.groupby(by='brand').size()
jul_tcp.groupby(by='brand').size()
njultcpv6.groupby(by='brand').size()
ago_tcp.groupby(by='brand').size()
nagotcpv6.groupby(by='brand').size()
set_tcp.groupby(by='brand').size()
nsettcpv6.groupby(by='brand').size()
out_tcp.groupby(by='brand').size()
nouttcpv6.groupby(by='brand').size()
nov_tcp.groupby(by='brand').size()
nnovtcpv6.groupby(by='brand').size()
dez_tcp.groupby(by='brand').size()
ndeztcpv6.groupby(by='brand').size()
jan_tcp.groupby(by='brand').size()
njantcpv6.groupby(by='brand').size()
fev_tcp.groupby(by='brand').size()
nfevtcpv6.groupby(by='brand').size()